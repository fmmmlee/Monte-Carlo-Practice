package barrier_options;

import java.io.IOException;

/*
 * 
 * Matthew Lee
 * Spring 2019
 * Practicing Monte Carlo Simulation
 * 
 * 
 * Just a class to try running the various implementations from
 * 
 * 
 * TODO: Check the values generated by your modification (just a multiplication) of the ones generated by the Box-Muller method
 * 		 -Probably doable by generating a few (dozen? hundred?) million floats using this method and tossing them in an array and graphing using some graphics package
 * 
 * 
 * TODO: Write a generic setup function to set up an openCL program
 */

public class Initializer {

	public static void main(String[] args) throws InterruptedException, IOException
	{
		System.out.println("[STATUS] Program Initiated");
		double mu = 0.1; //note: in kernel, risk is same as mu
		double sigma = 0.2;
		double years = 1.0;
		double start_price = 100.0;
		int path_chng = 365;
		double barrier = 95.0;
		double strike_price = 100.0;
		OptionParams parameters = new OptionParams(mu, sigma, years, start_price, path_chng, barrier, strike_price);
		
		int paths = 3200000;
			
		//System.out.println("[CPU] Hyperthreaded");
		//CPU_approx.threaded(paths, parameters);
		System.out.println("[GPU] Accelerated (GPGPU)");
		OpenCL_Accelerated.accelerated(paths, parameters);
	}
}
